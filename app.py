from flask import Flask, request, jsonify
from flask_cors import CORS
import openai
import os

app = Flask(__name__)
CORS(app, resources={r"/chat": {"origins": "*"}})  # Till√•ter frontend att anropa denna endpoint

# OpenAI API-konfiguration
openai.api_key = os.getenv("OPENAI_API_KEY")

@app.route('/chat', methods=['POST'])
def chat():
    user_message = request.json.get("message")

    if not user_message:
        return jsonify({"reply": "Jag beh√∂ver en fr√•ga eller ett √§mne f√∂r att hj√§lpa dig!"}), 400

    # üõë B√§ttre prompt f√∂r att f√• b√§ttre DIY-svar
    prompt = f"""
    Du √§r No Hazl Assistant, en hj√§lpsam AI som ger praktiska DIY-tips.
    N√§r anv√§ndaren fr√•gar n√•got, ge alltid ett konkret tips de kan testa hemma.
    Om det beh√∂vs mer info, st√§ll en specifik f√∂ljdfr√•ga.

    Anv√§ndarens fr√•ga: {user_message}
    """

    try:
        client = openai.OpenAI()
        response = client.chat.completions.create(
            model="gpt-4o-mini",
            messages=[{"role": "user", "content": prompt}]
        )
        reply = response.choices[0].message.content
        return jsonify({"reply": reply})

    except Exception as e:
        print("‚ùå OpenAI API-fel:", e)
        return jsonify({"reply": "‚ö†Ô∏è Jag kunde inte h√§mta ett svar just nu. F√∂rs√∂k igen senare."}), 500

if __name__ == '__main__':
    port = int(os.environ.get("PORT", 5000))  # üîÑ √Ñndrat fr√•n 10000 till standard
    app.run(host="0.0.0.0", port=port)
